logging.level.org.springframework: DEBUG

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2

spring.datasource.url=jdbc:h2:mem:bugtracker

#Actuator
management.endpoints.web.exposure.include=info,health,metrics,loggers,beans,mappings
management.endpoint.health.show-details=always


# ThymeLeaf
# spring.thymeleaf.template-loader-path: classpath:/templates
# spring.thymeleaf.suffix: .html
# spring.thymeleaf.cache: false

Somehow things changed since 2.5 ; based on https://github.com/spring-p..., I've relaized that data.sql gets executed before Hibernate schema creation. "spring.jpa.defer-datasource-initialization=true" solves the issue

# Hibernate and data.sql -- By default, data.sql scripts are now run BEFORE Hibernate is initialized.
# This aligns the behavior of basic script-based initialization with that of Flyway and Liquibase.
# If you want to use data.sql to populate a schema created by Hibernate,
#
#    set spring.jpa.defer-datasource-initialization to true.
#
# While mixing database initialization technologies is not recommended, this will also allow
# you to use a schema.sql script to build upon a Hibernate-created schema before it?s populated
# via data.sql.
spring.jpa.defer-datasource-initialization=true

# required after version 2.3 to return ResponseStatusException's messsage field to caller
# https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes#changes-to-the-default-error-pages-content
server.error.include-message=always